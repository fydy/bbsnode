{"version":3,"sources":["public/src/admin/manage/privileges.js"],"names":["define","autocomplete","translator","Benchpress","categorySelector","Privileges","cid","init","ajaxify","data","$","category","parseInt","go","setupPrivilegeTable","on","checkboxEl","this","privilege","parent","attr","state","prop","rowEl","parents","member","isPrivate","isGroup","undefined","bootbox","confirm","setPrivilege","app","alertError","addUserToPrivilegeTable","addGroupToPrivilegeTable","copyPrivilegesToChildren","copyPrivilegesFromCategory","exposeAssumedPrivileges","refreshPrivilegeTable","socket","emit","err","privileges","message","tpl","parse","html","translate","privs","each","idx","el","find","push","getAttribute","x","numPrivs","length","inputs","checked","indeterminate","set","replaceWith","modal","dialog","title","show","inputEl","user","ev","ui","defaultPrivileges","item","uid","group","name","alertSuccess","categories","slice","fromCid","toCid","refresh"],"mappings":"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","file":"public/src/admin/manage/privileges.js","sourcesContent":["'use strict';\n\ndefine('admin/manage/privileges', [\n\t'autocomplete',\n\t'translator',\n\t'benchpress',\n\t'categorySelector',\n], function (autocomplete, translator, Benchpress, categorySelector) {\n\tvar\tPrivileges = {};\n\n\tvar cid;\n\n\tPrivileges.init = function () {\n\t\tcid = ajaxify.data.cid || 0;\n\n\t\tcategorySelector.init($('[component=\"category-selector\"]'), function (category) {\n\t\t\tvar cid = parseInt(category.cid, 10);\n\t\t\tajaxify.go('admin/manage/privileges/' + (cid || ''));\n\t\t});\n\t\tPrivileges.setupPrivilegeTable();\n\t};\n\n\tPrivileges.setupPrivilegeTable = function () {\n\t\t$('.privilege-table-container').on('change', 'input[type=\"checkbox\"]', function () {\n\t\t\tvar checkboxEl = $(this);\n\t\t\tvar privilege = checkboxEl.parent().attr('data-privilege');\n\t\t\tvar state = checkboxEl.prop('checked');\n\t\t\tvar rowEl = checkboxEl.parents('tr');\n\t\t\tvar member = rowEl.attr('data-group-name') || rowEl.attr('data-uid');\n\t\t\tvar isPrivate = parseInt(rowEl.attr('data-private') || 0, 10);\n\t\t\tvar isGroup = rowEl.attr('data-group-name') !== undefined;\n\n\t\t\tif (member) {\n\t\t\t\tif (isGroup && privilege === 'groups:moderate' && !isPrivate && state) {\n\t\t\t\t\tbootbox.confirm('[[admin/manage/categories:alert.confirm-moderate]]', function (confirm) {\n\t\t\t\t\t\tif (confirm) {\n\t\t\t\t\t\t\tPrivileges.setPrivilege(member, privilege, state, checkboxEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcheckboxEl.prop('checked', !checkboxEl.prop('checked'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tPrivileges.setPrivilege(member, privilege, state, checkboxEl);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapp.alertError('[[error:invalid-data]]');\n\t\t\t}\n\t\t});\n\n\t\t$('.privilege-table-container').on('click', '[data-action=\"search.user\"]', Privileges.addUserToPrivilegeTable);\n\t\t$('.privilege-table-container').on('click', '[data-action=\"search.group\"]', Privileges.addGroupToPrivilegeTable);\n\t\t$('.privilege-table-container').on('click', '[data-action=\"copyToChildren\"]', Privileges.copyPrivilegesToChildren);\n\t\t$('.privilege-table-container').on('click', '[data-action=\"copyPrivilegesFrom\"]', Privileges.copyPrivilegesFromCategory);\n\n\t\tPrivileges.exposeAssumedPrivileges();\n\t};\n\n\tPrivileges.refreshPrivilegeTable = function () {\n\t\tsocket.emit('admin.categories.getPrivilegeSettings', cid, function (err, privileges) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tvar tpl = cid ? 'admin/partials/categories/privileges' : 'admin/partials/global/privileges';\n\t\t\tBenchpress.parse(tpl, {\n\t\t\t\tprivileges: privileges,\n\t\t\t}, function (html) {\n\t\t\t\ttranslator.translate(html, function (html) {\n\t\t\t\t\t$('.privilege-table-container').html(html);\n\t\t\t\t\tPrivileges.exposeAssumedPrivileges();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tPrivileges.exposeAssumedPrivileges = function () {\n\t\t/*\n\t\t\tIf registered-users has a privilege enabled, then all users and groups of that privilege\n\t\t\tshould be assumed to have that privilege as well, even if not set in the db, so reflect\n\t\t\tthis arrangement in the table\n\t\t*/\n\t\tvar privs = [];\n\t\t$('.privilege-table tr[data-group-name=\"registered-users\"] td input[type=\"checkbox\"]').parent().each(function (idx, el) {\n\t\t\tif ($(el).find('input').prop('checked')) {\n\t\t\t\tprivs.push(el.getAttribute('data-privilege'));\n\t\t\t}\n\t\t});\n\t\tfor (var x = 0, numPrivs = privs.length; x < numPrivs; x += 1) {\n\t\t\tvar inputs = $('.privilege-table tr[data-group-name]:not([data-group-name=\"registered-users\"],[data-group-name=\"guests\"]) td[data-privilege=\"' + privs[x] + '\"] input');\n\t\t\tinputs.each(function (idx, el) {\n\t\t\t\tif (!el.checked) {\n\t\t\t\t\tel.indeterminate = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tPrivileges.setPrivilege = function (member, privilege, state, checkboxEl) {\n\t\tsocket.emit('admin.categories.setPrivilege', {\n\t\t\tcid: cid,\n\t\t\tprivilege: privilege,\n\t\t\tset: state,\n\t\t\tmember: member,\n\t\t}, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tcheckboxEl.replaceWith('<i class=\"fa fa-spin fa-spinner\"></i>');\n\t\t\tPrivileges.refreshPrivilegeTable();\n\t\t});\n\t};\n\n\tPrivileges.addUserToPrivilegeTable = function () {\n\t\tvar modal = bootbox.dialog({\n\t\t\ttitle: '[[admin/manage/categories:alert.find-user]]',\n\t\t\tmessage: '<input class=\"form-control input-lg\" placeholder=\"[[admin/manage/categories:alert.user-search]]\" />',\n\t\t\tshow: true,\n\t\t});\n\n\t\tmodal.on('shown.bs.modal', function () {\n\t\t\tvar inputEl = modal.find('input');\n\n\t\t\tautocomplete.user(inputEl, function (ev, ui) {\n\t\t\t\tvar defaultPrivileges = cid ? ['find', 'read', 'topics:read'] : ['chat'];\n\t\t\t\tsocket.emit('admin.categories.setPrivilege', {\n\t\t\t\t\tcid: cid,\n\t\t\t\t\tprivilege: defaultPrivileges,\n\t\t\t\t\tset: true,\n\t\t\t\t\tmember: ui.item.user.uid,\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\n\t\t\t\t\tPrivileges.refreshPrivilegeTable();\n\t\t\t\t\tmodal.modal('hide');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tPrivileges.addGroupToPrivilegeTable = function () {\n\t\tvar modal = bootbox.dialog({\n\t\t\ttitle: '[[admin/manage/categories:alert.find-group]]',\n\t\t\tmessage: '<input class=\"form-control input-lg\" placeholder=\"[[admin/manage/categories:alert.group-search]]\" />',\n\t\t\tshow: true,\n\t\t});\n\n\t\tmodal.on('shown.bs.modal', function () {\n\t\t\tvar inputEl = modal.find('input');\n\n\t\t\tautocomplete.group(inputEl, function (ev, ui) {\n\t\t\t\tvar defaultPrivileges = cid ? ['groups:find', 'groups:read', 'groups:topics:read'] : ['groups:chat'];\n\t\t\t\tsocket.emit('admin.categories.setPrivilege', {\n\t\t\t\t\tcid: cid,\n\t\t\t\t\tprivilege: defaultPrivileges,\n\t\t\t\t\tset: true,\n\t\t\t\t\tmember: ui.item.group.name,\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t}\n\n\t\t\t\t\tPrivileges.refreshPrivilegeTable();\n\t\t\t\t\tmodal.modal('hide');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tPrivileges.copyPrivilegesToChildren = function () {\n\t\tsocket.emit('admin.categories.copyPrivilegesToChildren', cid, function (err) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\t\t\tapp.alertSuccess('Privileges copied!');\n\t\t});\n\t};\n\n\tPrivileges.copyPrivilegesFromCategory = function () {\n\t\tcategorySelector.modal(ajaxify.data.categories.slice(1), function (fromCid) {\n\t\t\tsocket.emit('admin.categories.copyPrivilegesFrom', { toCid: cid, fromCid: fromCid }, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tajaxify.refresh();\n\t\t\t});\n\t\t});\n\t};\n\n\treturn Privileges;\n});\n"]}